{"version":3,"sources":["components/TodoList/TodoList.jsx","api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","state","query","status","handleChange","event","target","name","value","props","filterTodosByTitle","filterTodosByStatus","setState","this","selectUser","shuffleTodos","todos","className","type","onChange","onClick","map","todo","key","id","classNames","completed","readOnly","checked","title","userId","React","PureComponent","request","url","fetch","then","response","ok","Error","statusText","json","CurrentUser","user","isLoading","userError","hasLoadingError","loadData","prevProps","result","data","clearUser","email","phone","Component","App","filteredTodos","selectedUserId","validateTodos","filter","prevState","includes","shuffledTodos","i","length","j","Math","floor","random","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.419a0614.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './TodoList.scss';\n\nexport class TodoList extends React.PureComponent {\n  state = {\n    query: '',\n    status: '',\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    const { filterTodosByTitle, filterTodosByStatus } = this.props;\n\n    this.setState({\n      [name]: value,\n    });\n\n    if (name === 'query') {\n      filterTodosByTitle(value);\n\n      return;\n    }\n\n    if (name === 'status') {\n      filterTodosByStatus(value);\n    }\n  }\n\n  render() {\n    const { query, status } = this.state;\n    const { selectUser, shuffleTodos, todos } = this.props;\n\n    return (\n      <div className=\"TodoList\">\n        <div>\n          <input\n            className=\"input\"\n            type=\"text\"\n            name=\"query\"\n            value={query}\n            onChange={this.handleChange}\n          />\n\n          <select\n            name=\"status\"\n            value={status}\n            onChange={this.handleChange}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={shuffleTodos}\n          >\n            Shuffle\n          </button>\n        </div>\n\n        <h2>Todos:</h2>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {todos.map(todo => (\n              <li\n                key={todo.id}\n                className={\n                  classNames(\n                    'TodoList__item',\n                    { 'TodoList__item--checked': todo.completed },\n                    { 'TodoList__item--unchecked': !todo.completed },\n                  )\n                }\n              >\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    readOnly\n                    checked={todo.completed}\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className=\"\n                    TodoList__user-button\n                    TodoList__user-button--selected\n                    button\n                  \"\n                  type=\"button\"\n                  onClick={() => selectUser(todo.userId)}\n                >\n                  {`User # ${todo.userId}`}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  filterTodosByTitle: PropTypes.func.isRequired,\n  filterTodosByStatus: PropTypes.func.isRequired,\n  shuffleTodos: PropTypes.func.isRequired,\n  selectUser: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    userId: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  })).isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nconst request = url => fetch(`${BASE_URL}${url}`)\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error(`${response.status}-${response.statusText}`);\n    }\n\n    return response.json();\n  });\n\nexport const getTodos = () => request('/todos')\n  .then(result => result.data);\n\nexport const getUser = id => request(`/users/${id}`)\n  .then(result => result.data);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getUser } from '../../api';\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: null,\n    isLoading: false,\n    userError: false,\n    hasLoadingError: false,\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { userId } = this.props;\n\n    if (prevProps.userId !== userId) {\n      this.loadData();\n    }\n  }\n\n  async loadData() {\n    const { userId } = this.props;\n\n    this.setState({\n      isLoading: true,\n      hasLoadingError: false,\n      userError: false,\n    });\n\n    try {\n      const user = await getUser(userId);\n\n      if (!user) {\n        this.setState({ userError: true });\n      }\n\n      this.setState({\n        user,\n        isLoading: false,\n      });\n    } catch (error) {\n      this.setState({\n        hasLoadingError: true,\n      });\n    }\n  }\n\n  render() {\n    const {\n      user,\n      isLoading,\n      userError,\n      hasLoadingError,\n    } = this.state;\n    const { clearUser } = this.props;\n\n    return (\n      <div className=\"CurrentUser\">\n        {\n          (\n            isLoading && <h3>Loadings</h3>,\n            hasLoadingError && <h3>Error occurred during loading</h3>,\n            userError && <h3>Can&apos;t find user</h3>\n          )\n        }\n        {(user && !isLoading)\n          && (\n            <>\n              <h2\n                className=\"CurrentUser__title\"\n              >\n                <span>\n                  {`Selected user: ${user.id}`}\n                </span>\n              </h2>\n\n              <h3 className=\"CurrentUser__name\">{user.name}</h3>\n              <p className=\"CurrentUser__email\">{user.email}</p>\n              <p className=\"CurrentUser__phone\">{user.phone}</p>\n              <button\n                className=\"button\"\n                type=\"button\"\n                onClick={clearUser}\n              >\n                Clear\n              </button>\n            </>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    filteredTodos: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    const todos = await getTodos();\n\n    this.setState({\n      todos: this.validateTodos(todos),\n      filteredTodos: this.validateTodos(todos),\n    });\n  }\n\n  validateTodos = todos => todos.filter(todo => (\n    todo.id\n      && todo.userId\n      && todo.title\n      && typeof todo.completed === 'boolean'\n  ))\n\n  selectUser = (id) => {\n    this.setState({\n      selectedUserId: id,\n    });\n  }\n\n  clearUser = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  }\n\n  filterTodosByTitle = (value) => {\n    this.setState(prevState => ({\n      filteredTodos: [...prevState.todos]\n        .filter(todo => todo.title.includes(value)),\n    }));\n  }\n\n  filterTodosByStatus = (value) => {\n\n    switch (value) {\n      case 'completed':\n        this.setState(prevState => ({\n          filteredTodos: prevState.todos\n            .filter(todo => todo.completed === true),\n        }));\n        break;\n\n      case 'active':\n        this.setState(prevState => ({\n          filteredTodos: prevState.todos\n            .filter(todo => todo.completed === false),\n        }));\n        break;\n\n      default:\n        this.setState(prevState => ({\n          filteredTodos: prevState.todos,\n        }));\n    }\n  }\n\n  shuffleTodos = () => {\n    this.setState((prevState) => {\n      const shuffledTodos = [...prevState.filteredTodos];\n\n      for (let i = shuffledTodos.length - 1; i > 0; i -= 1) {\n        const j = Math.floor(Math.random() * (i + 1));\n\n        [\n          shuffledTodos[i],\n          shuffledTodos[j],\n        ] = [shuffledTodos[j], shuffledTodos[i]];\n      }\n\n      return {\n        filteredTodos: shuffledTodos,\n      };\n    });\n  }\n\n  render() {\n    const { filteredTodos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={filteredTodos}\n            selectUser={this.selectUser}\n            filterTodosByTitle={this.filterTodosByTitle}\n            filterTodosByStatus={this.filterTodosByStatus}\n            shuffleTodos={this.shuffleTodos}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearUser={this.clearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}